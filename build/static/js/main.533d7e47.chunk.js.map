{"version":3,"sources":["App.js","actions/index.js","reducers/index.js","serviceWorker.js","index.js"],"names":["ActionCreators","Object","assign","TextInput","ev","type","payload","calculatedValue","connect","state","input","appmain","noOfButtons","dispatch","actions","bindActionCreators","props","className","value","substr","disabled","map","data","i","key","onClick","console","log","nval","calc","currentOp","ops","a","b","Math","pow","newCalc","length","j","push","calculate","s","ch","calculation","current","charAt","indexOf","parseFloat","parseCalculationString","isNaN","JSON","stringify","svalue","target","dangerouslySetInnerHTML","__html","initialstate","calculatedInput","action","Boolean","window","location","hostname","match","rootReducer","combineReducers","appreducer","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.533d7e47.chunk.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux'\nimport './App.css';\nimport {TextInput, parseCalculationString, calculate, calculatedValue} from './actions/index';\nimport { bindActionCreators } from 'redux';\nfunction App(props) {\n  let {actions}=props\n  return (\n    <div className=\"calculator card\">\n    <input className=\"calculator-screen\"  type=\"text\"  value={props.calculatedValue.substr(0, 16)}  disabled/>\n    <input className=\"calculator-screen \" type=\"text\" disabled value={props.input}  />\n    <div className=\"calculator-keys\">\n                {props.noOfButtons.map((data, i)=>{\n                  return(\n                    <button key={i} type={data.type}\n                      onClick={(ev)=>{\n                        if(data.value==='AC'){\n                          actions.TextInput('')\n                          actions.calculatedValue('')\n\n                        }\n                        else if(data.value==='='){\n                          console.log(props.input)\n                          let nval=calculate(parseCalculationString(props.input))\n                          if(isNaN(nval)){\n                            actions.TextInput('')\n                            actions.calculatedValue('')\n\n                          }else{\n                            actions.calculatedValue(JSON.stringify(nval))\n                          }\n                        }\n                        else if(data.svalue===\"+/-\"){\n                          // console.log('ddd')\n                          props.input===''?actions.TextInput(props.input+ev.target.value):actions.TextInput(props.input)\n                        }\n                        else{\n                          actions.TextInput(props.input+ev.target.value)\n                        }\n                      }} className={data.className} value={data.value} dangerouslySetInnerHTML={{__html:data.svalue}}></button>\n                  )\n                })}\n        </div>\n    </div>\n  );\n}\nconst mapStateToProps = state => ({\n  input:state.appmain.input,\n  noOfButtons:state.appmain.noOfButtons,\n  calculatedValue:state.appmain.calculatedValue\n})\nconst ActionCreators = Object.assign(\n  {TextInput, calculatedValue},\n);\nconst mapDispatchToProps = dispatch => {\n  return ({\n    actions:bindActionCreators(ActionCreators, dispatch)\n})}\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","export function TextInput(ev) {\n    return {\n    type: 'input',\n    payload: ev\n    }\n}\nexport function calculatedValue(ev){\n    return{\n        type:'calculatedValue',\n        payload:ev\n    }\n}\nexport function parseCalculationString(s) {\n    var calculation = [],\n    current = '';\n        for (let i = 0, ch; (ch = s.charAt(i)); i++) {\n            if ('^*/+-%'.indexOf(ch) > -1) {\n                if (current === '' && ch === '-') {\n                    current = '-';\n                } else {\n                    calculation.push(parseFloat(current), ch);\n                    current = '';\n                }\n            } else {\n                current += s.charAt(i);\n        }\n    }\n    if (current !== '') {\n        calculation.push(parseFloat(current));\n    }\n    return calculation;\n}\nexport function calculate(calc) {\n    var ops = [{'^': (a, b) =>  Math.pow(a, b)},\n    \t{'*': (a, b) => a * b, '/': (a, b) => a / b},\n        {'+': (a, b) => a + b, '-': (a, b) => a - b},\n        {'%':(a, b)=>a % b}\n        ],\n        newCalc = [],\n        currentOp;\n    for (var i = 0; i < ops.length; i++) {\n        for (var j = 0; j < calc.length; j++) {\n            if (ops[i][calc[j]]) {\n                currentOp = ops[i][calc[j]];\n            } else if (currentOp) {\n                newCalc[newCalc.length - 1] = currentOp(newCalc[newCalc.length - 1], calc[j]);\n                currentOp = null;\n            } else {\n                newCalc.push(calc[j]);\n            }\n        }\n        calc = newCalc;\n        newCalc = [];\n    }\n    if (calc.length > 1) {\n        console.log('Error: unable to resolve calculation');\n        return calc;\n    } else {\n        return calc[0];\n    }\n}","//value:'*',svalue:'&times;'\n// value:'/',svalue:'&divide;'\nlet initialstate={\n  input:'',\n  calculatedValue:'',\n  noOfButtons:[\n    {type:'button', value:'AC',svalue:'C', className:'btn btn-info waves-effect'},\n    {type:'button', value:'-',svalue:'+/-', className:'btn btn-info waves-effect'},\n    {type:'button', value:'%',svalue:'%', className:'btn btn-info waves-effect'},\n    {type:'button', value:'/',svalue:'&divide;', className:'btn btn-info waves-effect'},\n    {type:'button', value:'7',svalue:'7', className:'btn btn-light waves-effect'},\n    {type:'button', value:'8',svalue:'8', className:'btn btn-light waves-effect'},\n    {type:'button', value:'9',svalue:'9', className:'btn btn-light waves-effect'},\n    {type:'button', value:'*',svalue:'&times;', className:'operator btn btn-info waves-effect'},\n    {type:'button', value:'4',svalue:'4', className:'btn btn-light waves-effect'},\n    {type:'button', value:'5',svalue:'5', className:'btn btn-light waves-effect'},\n    {type:'button', value:'6',svalue:'6', className:'btn btn-light waves-effect'},\n    {type:'button', value:'-',svalue:'-', className:'operator btn btn-info waves-effect'},\n    {type:'button', value:'1',svalue:'1', className:'btn btn-light waves-effect'},\n    {type:'button', value:'2',svalue:'2', className:'btn btn-light waves-effect'},\n    {type:'button', value:'3',svalue:'3', className:'btn btn-light waves-effect'},\n    {type:'button', value:'+',svalue:'+', className:'operator btn btn-info waves-effect'},\n    {type:'button', value:'0',svalue:'0', className:'btn btn-light waves-effect'},\n    {type:'button', value:'.',svalue:'&middot;', className:'btn btn-light waves-effect'},\n    {type:'button', value:'=',svalue:'=', className:'equal-sign equallButton btn-default waves-effect'},\n\n  ]\n}\nconst calculatedInput = (state = initialstate, action) => {\n    switch (action.type) {\n      case 'input':\n        return {\n          ...state,\n          input:action.payload,\n          }\n      case 'calculatedValue':  \n      return {\n        ...state,\n        calculatedValue:action.payload\n        }  \n      default:\n        return state\n    }\n  }\n  export default calculatedInput","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {createStore, combineReducers} from 'redux';\nimport appreducer from './reducers'\nimport * as serviceWorker from './serviceWorker';\nconst rootReducer=combineReducers({\n  appmain:appreducer\n})\nconst store = createStore(rootReducer)\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}